http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log    /var/log/nginx/access.log  main;

    sendfile        on;
    keepalive_timeout  65;

    include /etc/nginx/conf.d/*.conf;

    # Server block for HTTP to HTTPS redirection
    server {
        listen 80;
        server_name api.apifinancedashboard.com;

        location / {
            return 301 https://$host$request_uri;
        }
    }

    # Server block for HTTPS
    server {
        listen 443 ssl;
        server_name api.apifinancedashboard.com;

        ssl_certificate /etc/letsencrypt/live/api.apifinancedashboard.com/fullchain.pem;
        ssl_certificate_key /etc/letsencrypt/live/api.apifinancedashboard.com/privkey.pem;

        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;

        location / {
            proxy_pass http://127.0.0.1:8000;  # Assuming your Django app is running on port 8000
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # CORS Headers - Nginx will handle CORS
            add_header Access-Control-Allow-Origin "https://apifinancedashboard.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT" always;
            add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-CSRFToken" always;
            add_header Access-Control-Allow-Credentials "true" always;

            # Preflight request handling
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://apifinancedashboard.com";
                add_header Access-Control-Allow-Methods "GET, POST, OPTIONS, DELETE, PUT";
                add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-CSRFToken";
                add_header Access-Control-Allow-Credentials "true";
                add_header Content-Length 0;
                add_header Content-Type text/plain;
                return 204;
            }

            # Security Headers
            add_header X-Content-Type-Options nosniff;
            add_header X-XSS-Protection "1; mode=block";
            add_header X-Frame-Options SAMEORIGIN;
            add_header Referrer-Policy "strict-origin-when-cross-origin";

            # Setting cookie attributes - Enforce cookies to be secure and have a SameSite attribute
            proxy_cookie_path / "/; Secure; HttpOnly; SameSite=Lax";
        }
    }
}